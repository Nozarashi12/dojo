class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def linked(values):
    head = Node(values[0])
    current = head
    for v in values[1:]:
        current.next = Node(v)
        current = current.next
    return head
    
def add(l1, l2):
    dummy = Node(0)
    current = dummy
    carry = 0
    
    while l1 or l2 or carry:
        v1 = l1.data if l1 else 0
        v2 = l2.data if l2 else 0
    
        t = v1 + v2 + carry
        carry = t // 10
        current.next = Node(t % 10)
        current = current.next
        
        if l1:
            l1 = l1.next
        if l2:
            l2 = l2.next
        
    return dummy.next
    
def display(node):
    result = []
    while node:
        result.append(str(node.data))
        node = node.next
    print(" ".join(result[::-1]))  

n = int(input())
l1 = list(map(int, input().split()))
m = int(input())
l2 = list(map(int, input().split()))

N = linked(l1[::-1])
M = linked(l2[::-1])

result = add(N, M)
display(result)
